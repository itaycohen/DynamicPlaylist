function dpSongsListLogic(e,n){function r(){g(),t(),c(),l(),k(),p()}function t(){for(var n,r=0,t=N(),s=0;s<t.length;s++)t[s]>0&&r++;switch(r){case 1:n=6.5;break;case 2:n=7;break;case 3:n=9;break;case 4:n=10;break;case 5:n=11;break;default:n=7}e.weightDistanceFactor=n}function s(){if(e.userGenresMap=A,localStorage){var n=localStorage.getItem(B);if("undefined"!=typeof n&&"undefined"!=n&&null!==n){var r;try{if(r=JSON.parse(n),o(r))return void(e.userGenresMap=r);a()}catch(e){console.error("Error: "+e+" | Unable to parse local storage data. value: "+n)}}else a()}}function a(){e.userGenresMap=A;var n={};n=JSON.stringify(A);try{localStorage.setItem(B,n)}catch(e){console.error("Error: "+e+" | Unable to set item to local storage data")}}function o(e){return e.length===F.length}function i(){var n=JSON.stringify(e.userGenresMap);try{localStorage.setItem(B,n)}catch(e){console.error("Error: "+e+" | Unable to set item to local storage data")}}function u(){return e.songsIndexesList}function g(){var n=e.rawSongsList.length,r=Array.apply(null,{length:n}).map(Number.call,Number);e.songsIndexesList=r}function c(){for(var n=[],r=e.rawSongsList,t=r.length,s=N(),a=0;a<t;a++){var o=r[a],i=o.g,u=d(i,s);n.push({index:a,score:u})}e.genreWeightsDistancesList=n}function l(){e.alreadyPlayedSongsIndexesListSingleCycle=[]}function d(e,n){for(var r=0,t=0,s=f(e),a=0!==s?1/s:1,o=0;o<n.length;o++){var i=n[o],u=e[o];i>0&&u>0?(r=Math.pow(5-Math.abs(i-u),2),t+=i===u?(r+10)*a:r*a):0!==i&&i!==-1||0!==u?0!==i&&0!==u||(r=5-Math.abs(i-u),t-=r):t+=.25}return Math.round(100*t)/100}function f(e){for(var n=0,r=0;r<e.length;r++)e[r]>0&&n++;return n}function p(){h(!1)}function h(n,r){var t,s;angular.isUndefined(r)?(t=0,s=e.songsIndexesList[0]):(t=e.songsIndexesList.indexOf(r),s=r),e.currentPlayingSongIndex=s;var a,o,i,u=e.songsIndexesList.splice(0,t+1);for(a=0,o=u.length;a<o;a++)i=u[a],e.alreadyPlayedSongsIndexesListSingleCycle.push(i);S(),n||e.$apply()}function S(){for(var n=e.genreWeightsDistancesList.slice(),r=[],t=[],s=0;s<n.length;s++){var a=n[s];a.score<O()?t.push(a.index):r.push(a)}console.log("length of lowerGenreWeightDistancesListToSort: "+r.length);var o=r.length;if(o<=10){for(var i=[],u=0;u<n.length;u++){var g=n[u];i.push(g)}r=i}r.length<=e.alreadyPlayedSongsIndexesListSingleCycle.length&&(e.alreadyPlayedSongsIndexesListSingleCycle=[]);var c=[],l=new Date,d=(l.getDay()+1)*(l.getMonth()+1);r.sort(function(e,n){var r;if(L(e.index)&&!L(n.index))return 1;if(!L(e.index)&&L(n.index))return-1;if(r=n.score-e.score,0!==r)return r;var t=e.index%d,s=n.index%d;return s-t});for(var f=0;f<r.length;f++)c.push(r[f].index);var p=[];p=c.concat(t),e.songsIndexesList=p}function L(n){return e.alreadyPlayedSongsIndexesListSingleCycle.indexOf(n)!=-1}function v(){var n=e.currentPlayingSongIndex;return e.rawSongsList[n].id}function y(n,r){e.userGenresMap[F.indexOf(n)]=r,t();for(var s=N(),a=e.genreWeightsDistancesList.length,o=0;o<a;o++){var i=e.genreWeightsDistancesList[o],u=G(o),g=d(u,s);i.score=g,e.genreWeightsDistancesList[o]=i}S()}function G(e){var n=x(e),r=n.g;return r}function x(n){return e.rawSongsList[n]}function I(){return e.currentPlayingSongIndex}function M(n){var r=e.rawSongsList[n];return r.s}function m(n){var r=e.rawSongsList[n];return r.a}function D(){return W(N())}function N(){return"undefined"!=typeof e.userGenresMap&&"undefined"!=e.userGenresMap&&null!==e.userGenresMap?e.userGenresMap:(console.error("$rootScope.userGenresMap was npt defined, $rootScope.userGenresMap: "+e.userGenresMap),e.userGenresMap=A,e.userGenresMap)}function W(e){for(var n=[],r=0;r<e.length;r++)currentGenreEntry=e[r],currentGenreEntry!==-1&&n.push(F[r]);return n}function w(n){for(var r=[],t=0;t<F.length;t++)if(currentGenreName=F[t],n.indexOf(currentGenreName)>-1){var s=e.userGenresMap[t];s===-1?r.push(U):r.push(s)}else r.push(-1);return r}function b(n){e.userGenresMap=w(n)}function P(){return F}function C(n){return e.userGenresMap[F.indexOf(n)]}function O(){return e.weightDistanceFactor}function k(){for(var n=e.userGenresMap,r=0;r<n.length;r++)currentGenreWeight=n[r],currentGenreName=F[r],currentGenreWeight!==-1?y(currentGenreName,currentGenreWeight):y(currentGenreName,-1)}var U=3,F=["Alternative","Chill Out","Country","Dance","Folk","Funk","Hip-Hop","Indie","Latin","Love","Metal","Pop","Punk","R&B","Rap","Reggae","Reggaeton","Rock","Soul","Trance"],A=[3,-1,-1,3,-1,-1,-1,3,-1,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1],B="mm-data-genres",E={initCalcSongsList:r,initUserData:s,getSongsIndexesList:u,getUserGenresNames:D,setSelectedGenresByNames:b,getWeightOfGenre:C,geAllGenresNames:P,popSongIndexFromListAndUpdate:h,getNextSongId:v,updateGenreWeightsDistancesList:y,updateGenreWeightsDistancesListByCurrentWidget:k,getCurrentPlayingSongIndex:I,updateSongsIndexesList:S,getSongNameByIndex:M,getSongArtistByIndex:m,updateWeightDistanceFactor:t,storeUserGenresData:i};return E}angular.module("dpSongsListLogic",[]).factory("dpSongsListLogic",dpSongsListLogic),dpSongsListLogic.$inject=["$rootScope","dpSongsListUtils"];