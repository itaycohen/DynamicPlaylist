function dpSongsListLogic(e,n){function r(){o(),g(),u(),w(),f()}function t(){if(e.userGenresMap=$,localStorage){var n=localStorage.getItem(J);if("undefined"==typeof n||"undefined"==n||null===n){e.userGenresMap=$;var r={};r=JSON.stringify($);try{localStorage.setItem(J,r)}catch(e){console.error("Error: "+e+" | Unable to set item to local storage data")}return}var t;try{if(t=JSON.parse(n),s(t))return void(e.userGenresMap=t)}catch(e){console.error("Error: "+e+" | Unable to parse local storage data. value: "+n)}}}function s(e){return e.length===E.length}function a(){var n=JSON.stringify(e.userGenresMap);try{localStorage.setItem(J,n)}catch(e){console.error("Error: "+e+" | Unable to set item to local storage data")}}function i(){return e.songsIndexesList}function o(){var n=e.rawSongsList.length,r=Array.apply(null,{length:n}).map(Number.call,Number);e.songsIndexesList=r}function g(){for(var n=[],r=e.rawSongsList,t=r.length,s=0;s<t;s++){var a=r[s],i=a.g,o=c(i,!0),g=l(i);n.push({index:s,avgDistance:o,genreWeightsDistance:g})}e.genreWeightsDistancesList=n}function u(){e.alreadyPlayedSongsIndexesListSingleCycle=[]}function c(e,n){var r=0,t=0;for(var s in e){var a=e[s];n&&(a=d(a)),r+=a,t++}return r/t}function l(e){for(var n=[],r=0;r<e.length;r++)n[r]=d(e[r]);return n}function d(e){return Math.abs(e-b)}function f(){p(!1)}function p(n,r){var t,s;angular.isUndefined(r)?(t=0,s=e.songsIndexesList[0]):(t=e.songsIndexesList.indexOf(r),s=r),e.currentPlayingSongIndex=s;var a,i,o,g=e.songsIndexesList.splice(0,t+1);for(a=0,i=g.length;a<i;a++)o=g[a],e.alreadyPlayedSongsIndexesListSingleCycle.push(o);S(),n||e.$apply()}function S(){for(var n=(e.alreadyPlayedSongsIndexesListSingleCycle[e.alreadyPlayedSongsIndexesListSingleCycle.length-1],e.genreWeightsDistancesList.slice()),r=[],t=[],s=0;s<n.length;s++){var a=n[s];a.avgDistance>A?t.push(a.index):r.push(a)}r.length<=e.alreadyPlayedSongsIndexesListSingleCycle.length&&(e.alreadyPlayedSongsIndexesListSingleCycle=[]);var i=[],o=new Date,g=o.getDay()*o.getMonth();r.sort(function(e,n){var r;if(h(e.index)&&!h(n.index))return 1;if(!h(e.index)&&h(n.index))return-1;if(r=e.avgDistance-n.avgDistance,0!==r)return r;var t=e.index%g,s=n.index%g;return t-s});for(var u=0;u<r.length;u++)i.push(r[u].index);var c=[];c=i.concat(t),e.songsIndexesList=c}function h(n){return e.alreadyPlayedSongsIndexesListSingleCycle.indexOf(n)!=-1}function y(){var n=e.currentPlayingSongIndex;return e.rawSongsList[n].id}function L(n,r){for(var t=e.genreWeightsDistancesList.length,s=0;s<t;s++){var a=e.genreWeightsDistancesList[s],i=v(s,n),o=Math.abs(i-r),g=E.indexOf(n);a.genreWeightsDistance[g]=o;var u=c(a.genreWeightsDistance,!1);a.avgDistance=u,e.genreWeightsDistancesList[s]=a}S(),e.userGenresMap[E.indexOf(n)]=r}function v(e,n){var r=x(e),t=E.indexOf(n),s=r[t];return s}function x(e){var n=G(e),r=n.g;return r}function G(n){return e.rawSongsList[n]}function I(){return e.currentPlayingSongIndex}function m(n){var r=e.rawSongsList[n];return r.s}function M(n){var r=e.rawSongsList[n];return r.a}function D(){return W(N())}function N(){return"undefined"!=typeof e.userGenresMap&&"undefined"!=e.userGenresMap&&null!==e.userGenresMap?e.userGenresMap:(console.error("$rootScope.userGenresMap was npt defined, $rootScope.userGenresMap: "+e.userGenresMap),e.userGenresMap=$,e.userGenresMap)}function W(e){for(var n=[],r=0;r<e.length;r++)currentGenreEntry=e[r],currentGenreEntry!==-1&&n.push(E[r]);return n}function P(n){for(var r=[],t=0;t<E.length;t++)if(currentGenreName=E[t],n.indexOf(currentGenreName)>-1){var s=e.userGenresMap[t];s===-1?r.push(B):r.push(s)}else r.push(-1);return r}function O(n){e.userGenresMap=P(n)}function C(){return E}function U(n){return e.userGenresMap[E.indexOf(n)]}function w(){for(var n=e.userGenresMap,r=0;r<n.length;r++)currentGenreWeight=n[r],currentGenreName=E[r],currentGenreWeight!==-1?L(currentGenreName,currentGenreWeight):L(currentGenreName,-1)}var b=2.5,A=1.8,B=3,E=["Pop","Alternative","Dance","R&B","Latin","Soul","Hip-Hop"],$=[3,-1,3,3,-1,-1,-1],J="mm-data-genres",H={initCalcSongsList:r,initUserData:t,getSongsIndexesList:i,getUserGenresNames:D,setSelectedGenresByNames:O,getWeightOfGenre:U,geAllGenresNames:C,popSongIndexFromListAndUpdate:p,getNextSongId:y,updateGenreWeightsDistancesList:L,updateGenreWeightsDistancesListByCurrentWidget:w,getCurrentPlayingSongIndex:I,updateSongsIndexesList:S,getSongNameByIndex:m,getSongArtistByIndex:M,storeUserGenresData:a};return H}angular.module("dpSongsListLogic",[]).factory("dpSongsListLogic",dpSongsListLogic),dpSongsListLogic.$inject=["$rootScope","dpSongsListUtils"];